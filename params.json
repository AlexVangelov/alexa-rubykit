{"name":"Alexa Ruby Kit","tagline":"Amazon Echo Alexa's App Kit Ruby Implementation","body":"# AlexaRubykit\r\n[![Gem Version](https://badge.fury.io/rb/alexa_rubykit.svg)](http://badge.fury.io/rb/alexa_rubykit)[![Build Status](https://travis-ci.org/damianFC/alexa-rubykit.svg?branch=master)](https://travis-ci.org/damianFC/alexa-rubykit)[![Build Status](https://travis-ci.org/damianFC/alexa-rubykit.svg?branch=dev)](https://travis-ci.org/damianFC/alexa-rubykit)[![Inline docs](http://inch-ci.org/github/damianFC/alexa-rubykit.svg?branch=master)](http://inch-ci.org/github/damianFC/alexa-rubykit)\r\n\r\nThis gem implements a quick back-end service for deploying applications for Amazon's Echo (Alexa).\r\n\r\n## Installation\r\n\r\n### Sample Application\r\n\r\nFor a sample application video tutorial, watch: \r\n\r\nhttp://www.youtube.com/watch?feature=player_embedded&v=PwZf506UKHo\r\n\r\n\r\nSamples are provided by the alexa_rubyengine project: \r\n\r\nhttps://github.com/damianFC/alexa_rubyengine\r\n\r\n### For Ruby Projects:\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'alexa_rubykit'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install alexa_rubykit\r\n\r\n## Usage\r\n\r\nThis Gem provides methods to create and handle request and response objects to be used in your container of choice.\r\n\r\nSample usage:\r\n\r\n```ruby\r\nrequire 'alexa_rubykit'\r\nresponse = AlexaRubykit::Response.new\r\nresponse.add_speech('Ruby is running ready!')\r\nresponse.build_response\r\n```\r\n\r\nWill generate a valid outputspeech response in JSON format:\r\n\r\n``` JSON\r\n$ {\"version\":\"1.0\",\"response\":{\"outputSpeech\":{\"type\":\"PlainText\",\"text\":\"Ruby is running ready!\"},\"shouldEndSession\":true}}\r\n```\r\n\r\n## Troubleshooting\r\n\r\nThere are two sources of troubleshooting information: the Amazon Echo app/website and the EBS logs that you can get from\r\nthe management console.\r\n- \"Error in SSL handshake\" : Make sure your used the FQDN when you generated the SSL and it's also the active SSL in EBS.\r\n- \"Error communicating with the application\" : Query the EBS logs from the management console and create an issue on GitHub.\r\n\r\n## Contributing\r\n\r\n1. Decide to work on the \"dev\" (unstable) branch or \"master\" (stable)\r\n1. Fork it ( https://github.com/[my-github-username]/alexa_rubykit/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n\r\nAll development is done in the \"dev\" branch before being merged to master. Applications can use the developer\r\nenvironment by adding the following line to their Gemfile:\r\n\r\n```ruby\r\ngem 'alexa_rubykit', :git => 'https://github.com/damianFC/alexa-rubykit.git', :branch => 'dev'\r\n```\r\n\r\nTo use the stable/master branch, rename 'dev' to 'master' or remove :branch all together.\r\n\r\n\r\n\r\n# <a name=\"team-members\"></a>Team Members\r\n* \"Damian Finol\" <damian.finol@gmail.com>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}